// using "jQuery" here instead of the dollar sign will protect against conflicts with other libraries like MooTools
jQuery(document).ready(function() {

    //Set default Jacked ease
    Jacked.setEase("Expo.easeOut");
    Jacked.setEngines({
        firefox: true,
        opera: true,
        safari: true,
		ios: true
    });
    jQuery.easing.def = "easeOutExpo";
    jQuery.wiseguys();

});

// plugin structure used so we can use the "$" sign safely
 (function($) {

    //main vars
    var mainContainer;
    var contWidth;
    var contHeight;
    var prevContHeight;
    var prevContWidth;
    var isMobile;
    var isHomePage;
    var pageLayoutType;
    var mouseX;
    var mouseY;
	var isIE8;
	var isBoxedLayout;
	var menuFirstLoad;

    //Blur vars
    var blurRadius;
    var IEBlurRadius;
    var supportsCanvas;
    var browser;

    //menu
    var subArrow;
    var subArrowTimeout;
    var subArrowUp;
    var curMenu;
    var subArrowXPos;
    var subArrowDestWidth;
    var destArrowX;

    //bg
    var img;
    var imgWidth;
    var imgHeight;
    var winWidth;
    var winHeight;
    var widthRatio;
    var heightRatio;
    var widthDiff;
    var heightDiff;
    var scrollTop;
    var bgImage;

    //Featured Carousel
    var portfolioCarousel;
    var portfolioNav;
    var portfolioNext;
    var portfolioPrevious;
    var portfolioItemWidth;
    var portfolioItemHeight;
    var portfolioItemMargin;
    var portfolioItemTotal;
    var numPortfolioShowing;
    var portfolioAnimPrevious;
    var portfolioAnimNext;
    var curPortfolioMarginDest;
    var portfolioLeftRemaining;
    var portfolioRightRemaining;
    var portfolioInterval;
    var portfolioIntervalDelay;
    var portfolioAuto;
    var mouseOverPortfolioNav;
    var isSmallCarousel;
    var hasPortfolioCarousel;

    //Blog Carousel
    var blogCarousel;
    var blogNav;
    var blogNext;
    var blogPrevious;
    var blogItemWidth;
    var blogItemHeight;
    var blogItemMargin;
    var blogItemTotal;
    var numBlogShowing;
    var blogAnimPrevious;
    var blogAnimNext;
    var curBlogMarginDest;
    var blogLeftRemaining;
    var blogRightRemaining;
    var blogInterval;
    var blogIntervalDelay;
    var blogAuto;
    var mouseOverBlogNav;
    var isSmallBlogCarousel;
    var hasBlogCarousel;

    //isotope
    var isotopeInterval;
    var isotopeIntervalLength;
    var prevIsotopeBgHeight;
    var isIsotope;
    var isotopeFilterWidth;
    var isotopeFilterHeight;
    var isotopeFilters;
    var isotopeDropdown;
    var isotopePagination;
    var isotopePaginationWidth;
    var isotope3Col;

    //button slider
    var likeboxTimeout;
    var likeToolbox;
    var buttonSliderOpen;

    // class constructor / "init" function
    $.wiseguys = function() {

        // write values to global vars, setup the plugin, etc.
        supportsCanvas = (document.createElement("canvas").getContext) ? true: false;
        browser = Jacked.getBrowser();
        isMobile = (Jacked.getMobile() == null) ? false: true;
		isIE8 = Jacked.getIE();

        blurRadius = 50;
        IEBlurRadius = 25;
        scrollTop = 0;
        
        isIsotope = false;
		menuFirstLoad = true;

        //container
		isBoxedLayout = $('body').hasClass('boxed') ? true : false;
        mainContainer = $('.container');
		bgImage = mainContainer.attr('data-backgroundImage');
        isHomePage = (mainContainer.hasClass('home')) ? true: false;
        contWidth = mainContainer.width();
        prevContWidth = contWidth;
        contHeight = mainContainer.height();
        prevContHeight = contHeight;

        

        //menu
        subArrow = $('#submenuArrow');
        subArrowUp = $('.arrow-up');
        curMenu = $('#smoothmenu .current');
		
		
		
		//functions
		setFullBg();
        addOddClasses();
        loadBgImage(bgImage);
        initMenu();
        checkMenuWidth();
		initCarousel();
        initLightbox();
        initTweets();
        initMiniSliders();

        initIsotopePortfolio();
        setFooterBgFullWidth();
        if (!isHomePage) {
            sortPageHeaderStyle();
        }

        initTabs();
        initAccordion();

        initPortfolioSingle();
        initButtonsSlider();
        initFaq();
        initTipsy();
        initContactForm();
        handleGoogleMap();
		initFlexSlider();
		scaleIframes();

    }
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
    //MAKE IFRAMES RESPONSIVE
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function scaleIframes() {

        if (mainContainer.find('section').hasClass('blogIframe')) {

			$('.blogIframe').fitVids();

        }

    }
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
    //FLEX SLIDER
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function initFlexSlider() {

        if (mainContainer.find('div').hasClass('flexslider')) {
			
			
			var s = $('.flexslider');
			var useArrows = s.attr('data-arrows') == 'true' ? true : false;
			var useThumbs = s.attr('data-thumbnail') == 'true' ? true : false;
			
			if(!useThumbs){
				s.css({
					 marginBottom: '10px' 
				});
			}

            s.flexslider({
                animation: "slide",
                video: true,
                directionNav: useArrows,
				controlNav: useThumbs,
                start: function(slider) {
                    //$('body').removeClass('loading');
                    }
            });

        }

    }
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
    //TIPSY TOOLTIP
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function initTipsy() {

        mainContainer.find('.tooltip').each(function() {

            var t = $(this);

            t.css({
                cursor: 'pointer'
            }).tipsy({
                gravity: 's',
                fade: true,
                offset: 5,
                opacity: 1,
                title: 'data-tooltipText'
            });

        });

    }
	
	
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //GOOGLE MAP
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function handleGoogleMap() {

        if (mainContainer.find('article').hasClass('gMap')) {

            var map = $('.gMap iframe')
                var gWidth = map.attr('width');
            var gHeight = map.attr('height');
            var ratio = gHeight / gWidth;


            if (contWidth == 1000 && gWidth != 695) {
                map.attr('width', 695).attr('height', Math.round(695 * ratio))
                } else if (contWidth == 768 && gWidth != 503) {
                map.attr('width', 503).attr('height', Math.round(503 * ratio))
                } else if (contWidth == 420 && gWidth != 420) {
                map.attr('width', 420).attr('height', Math.round(420 * ratio))
                } else if (contWidth == 300 && gWidth != 300) {
                map.attr('width', 300).attr('height', Math.round(300 * ratio))
                }
        }

    }

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //CONTACT FORM
    /////////////////////////////////////////////////////////////////////////////////////////////////////////

    function initContactForm() {

        //contact
        if (mainContainer.find('#contact')) {

            var curVal;

            $('#contact #name').focus(function() {
                curVal = $(this).val();
                $(this).val('');
            });
            $('#contact #email').focus(function() {
                curVal = $(this).val();
                $(this).val('');
            });
            $('#contact #website').focus(function() {
                curVal = $(this).val();
                $(this).val('');
            });
            $('#contact #comments').focus(function() {
                curVal = $(this).val();
                $(this).val('');
            });

            $('#contact #name').blur(function() {

                if ($(this).val() == '') {
                    $(this).val(curVal);
                }
            });
            $('#contact #email').blur(function() {

                if ($(this).val() == '') {
                    $(this).val(curVal);
                }
            });
            $('#contact #website').blur(function() {

                if ($(this).val() == '') {
                    $(this).val(curVal);
                }
            });
            $('#contact #comments').blur(function() {

                if ($(this).val() == '') {
                    $(this).val(curVal);
                }
            });

            $('#contactform').submit(function() {


                var action = $(this).attr('action');
                var values = $(this).serialize();

                $('#submit').attr('disabled', 'disabled').after('<img src="images/contact/ajax-loader.gif" class="loader" />');

                handleFullBg();

                $("#message").slideUp(750, function() {

                    handleFullBg();

                    $('#message').hide();

                    $.post(action, values, function(data) {
                        $('#message').html(data);
                        $('#message').slideDown('slow');
                        $('#contactform img.loader').fadeOut('fast', function() {
                            $(this).remove()
                            });
                        $('#submit').removeAttr('disabled');
                        if (data.match('success') != null)
                            $('#contactform').slideUp('slow');

                    });

                });

                return false;

            });

        };

    }

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //FAQ ACCORDION
    /////////////////////////////////////////////////////////////////////////////////////////////////////////

    function initFaq() {

        if (mainContainer.find('section').hasClass('faq')) {

            var faqItem = $('.faq').find('article');
            var toggle = $('.faq').attr('data-toggle') == "true" ? true: false;

            faqItem.each(function() {

                var t = $(this);
                var q = t.find('.question');
                var p = t.find('p');
                
				
                p.css({
                    //height: p.outerHeight() + 'px',
                    display: 'none'
                });
				

                q.click(function() {

                    handleFullBg();

                    var qs = $(this);

                    //if toggle option is on, remove previous section
                    if (toggle && !qs.hasClass('selected')) {

                        $('.faq .question').each(function() {
                            var qItem = $(this);
                            var p = qItem.parent().find('p');
                            if (qItem.hasClass('selected') && qItem != qs) {
                                qItem.removeClass('selected');
                                p.slideUp(500);
                            }

                        });

                    }

                    //open current slide
                    if (qs.hasClass('selected')) {
                        qs.removeClass('selected');
                        p.slideUp(500);
                        return;
                    } else {
                        qs.addClass('selected');
                        p.slideDown(500);
                    }

                });

            });

        };

    }

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //LIKE/PLUSONE TOOLBOX
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function initLikeToolbox() {

        if (mainContainer.find('div').hasClass('addthis_toolbox')) {

            var likeBtn = $('.like');
            likeToolbox = $('.addthis_toolbox');
            var position = likeBtn.position();

            likeToolbox.css({
                opacity: 0,
                display: 'none',
                left: position.left + 'px'
            });

            //mouse events
            likeBtn.mouseover(function() {
                clearTimeout(likeboxTimeout);

                if (likeToolbox.css('opacity') != 1) {
                    likeToolbox.css({
                        'z-index': 1000001
                    }).fadeInJacked();
                }

            });

            likeBtn.mouseout(function() {
                likeboxTimeout = setTimeout(hideLikeBox, 500);
                likeToolbox.css({
                    'z-index': 999999
                });
            });

            likeToolbox.mouseover(function() {
                clearTimeout(likeboxTimeout);
            });

            likeToolbox.mouseout(function() {
                likeboxTimeout = setTimeout(hideLikeBox, 500);
            });

        }

    }

    function hideLikeBox() {
        clearTimeout(likeboxTimeout);
        likeToolbox.fadeOutJacked();
    }
	

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //MENU
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function initMenu() {

        ddsmoothmenu.init({
            mainmenuid: "smoothmenu",
            orientation: 'h',
            classname: 'ddsmoothmenu',
            contentsource: "markup"
            });

        var topMenuLinks = $('#smoothmenu ul:first > li > a');
        var subMenuLinks = $('#smoothmenu ul > li ul > li > a');

        //Don't even ask :D
        var lastMenuWithSubmenu = $('#smoothmenu ul:first > li > ul:last').parent();
		

        //main menu links listeners to deal with arrow animation
        topMenuLinks.mouseenter(function(e) {

            clearTimeout(subArrowTimeout);
			menuFirstLoad = false;

            subArrowXPos = $(this).parent().position();
            subArrowDestWidth = $(this).parent().width();
            destArrowX = subArrowDestWidth / 2 - parseInt(subArrowUp.css('width'), 10) / 2;

            if ($(this).html() == $('#smoothmenu ul:first > li > ul:last').parent().find('a:first').html()) {
                subArrowDestWidth += 1;
            }

            subArrow.jacked({
                left: subArrowXPos.left,
                width: subArrowDestWidth,
                opacity: 1
            }, {
                duration: 500
            });

            subArrowUp.jacked({
                left: destArrowX
            }, {
                duration: 500
            });

        });

        topMenuLinks.mouseleave(function(e) {
            if (!$(this).hasClass('selected')) {

                subArrowXPos = curMenu.parent().position();
                subArrowDestWidth = curMenu.parent().width();
                destArrowX = subArrowDestWidth / 2 - parseInt(subArrowUp.css('width'), 10) / 2;

                subArrow.jacked({
                    left: subArrowXPos.left,
                    width: subArrowDestWidth,
                    opacity: 1
                }, {
                    duration: 500
                });

                subArrowUp.jacked({
                    left: destArrowX
                }, {
                    duration: 500
                });

            } else {
                subArrowTimeout = setTimeout(clearSubArrow, 100);
            }

        });

        //Handle menu arrow when leaving submenu
        subMenuLinks.mouseout(function(e) {

            subArrowTimeout = setTimeout(clearSubArrow, 100);
        });

        subMenuLinks.mouseover(function(e) {

            clearTimeout(subArrowTimeout);
        });

        //$("nav ul").find('ul').addClass('.dropDownSub');

        //mobile select fall back
        // Populate dropdown with menu items
        $("nav a").each(function() {

            var el = $(this);
            var optSub = el.parents('ul');
            var len = optSub.length;
            var subMenuDash = '&#45;';
            var dash = Array(len).join(subMenuDash);

            $("<option />", {
                "value": el.attr("href"),
                "html": dash + el.text()
                }).appendTo("nav select");
        });

        $("nav select").change(function() {
            window.location = $(this).find("option:selected").val();
        });

        //set arrow first position
        setTimeout(clearSubArrow, 2000);

    }

    //Remove menu arrow
    function clearSubArrow() {

        subArrowXPos = curMenu.parent().position();
        subArrowDestWidth = curMenu.parent().width();
        destArrowX = subArrowDestWidth / 2 - parseInt(subArrowUp.css('width'), 10) / 2;

		//if(browser != 'chrome' && menuFirstLoad){
			subArrow.jacked({
				left: subArrowXPos.left,
				width: subArrowDestWidth,
				opacity: 1
			}, {
				duration: 500
			});
	
			subArrowUp.jacked({
				left: destArrowX
			}, {
				duration: 500
			});
		//}
		/*
		else if(menuFirstLoad){
			subArrow.css({
				left: subArrowXPos.left,
				width: subArrowDestWidth,
				opacity: 1
			});
			subArrowUp.css({
				left: destArrowX
			});
			menuFirstLoad = false;
		}
		*/
    }

    function checkMenuWidth() {

        var logoWidth = $('.logo').width() + 40;
        var availableWidth = contWidth - logoWidth;
        var menuWidth = $('.ddsmoothmenu').width();
        var mainMenu = $('nav #smoothmenu');
        var dropDown = $('nav form');
		var arrow = $('#submenuArrow');
		


        if (availableWidth >= menuWidth) {
            mainMenu.css({
                'visibility': 'visible'
            });
            dropDown.css({
                'display': 'none'
            });
			arrow.css({
                'display': 'inline'
            });
        } else {
            arrow.css({
                'display': 'none'
            });
			mainMenu.css({
                'visibility': 'hidden'
            });
            dropDown.css({
                'display': 'inline-block'
            });
        }

    }

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //PAGE HEADER STYLES
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function sortPageHeaderStyle() {
		

        var headerCont = $('.headerContent');
        var pageTitle = $('.pageTitle');
        var crumbs = $('.breadCrumbs');
        var headerType = headerCont.attr('id');
        pageLayoutType = headerCont.attr('data-layout');
        var tagLine = $('#tagLine');

        if (pageLayoutType == "image") {

            $('#blurMask').css({
                display: 'none'
            });

            headerCont.find('.headerContentContainer').css({
                background: 'none',
                textAlign: 'left',
                marginLeft: '20px'
            });

            tagLine.css({
                height: '69px',
                padding: 0,
                paddingLeft: '20px',
                textAlign: 'left'
            }).find('h1').css({
                display: 'none'
            });

            pageTitle.remove().appendTo(tagLine);

            crumbs.remove().appendTo(tagLine);

            alignPageTitle();

        } else if (pageLayoutType == "blur") {
        } else {
            //create colored bg
            $('#blurMask').css({
                display: 'none'
            });

            headerCont.find('.headerContentContainer').css({
                background: 'none'
            });

            $('.headerContentBg').css({
                backgroundColor: pageLayoutType
            }).removeClass('hidden');
			
			
			$('.headerContentBgBoxed').css({
                backgroundColor: pageLayoutType
            }).removeClass('hidden');

        }

    }

    function textWidth(txt, fontSize) {
        var html_calc = $('<span>' + txt.html() + '</span>');
        html_calc.css('font-size', fontSize + 'px').hide();
        html_calc.prependTo('body');
        var width = html_calc.width();
        html_calc.remove();
        return width;
    }

    function alignPageTitle() {

        var pageTitle = $('#tagLine .pageTitle');
        var crumbs = $('#tagLine .breadCrumbs');
        var tagLine = $('#tagLine');

        if (contWidth > 300) {

            if (pageLayoutType == "image") {

                pageTitle.css({
                    fontSize: '25px',
                    color: '#000',
                    marginTop: 0,
                    float: 'left',
                    marginLeft: 0,
                    lineHeight: '66px'
                });

                crumbs.css({
                    color: '#000',
                    float: 'right',
                    marginTop: '25px',
                    marginLeft: 0
                });

                tagLine.css({
                    height: '69px',
                    padding: 0,
                    paddingLeft: '20px',
                    textAlign: 'left'
                });
            } else if (pageLayoutType == "blur") {
            } else {
                $('.headerContentBg').css({
                    height: '200px',
                    top: '90px'
                });
            }

        } else {

            if (pageLayoutType == "image") {

                var tw = textWidth(pageTitle, 25);
                var cw = textWidth(crumbs, 12);

                pageTitle.css({
                    fontSize: '25px',
                    color: '#000',
                    marginTop: '21px',
                    float: 'left',
                    marginLeft: (300 - tw) / 2,
                    lineHeight: '30px'
                });

                crumbs.css({
                    color: '#000',
                    float: 'left',
                    marginTop: '5px',
                    marginLeft: (300 - cw) / 2
                });

                tagLine.css({
                    height: '100px',
                    padding: 0,
                    paddingLeft: '0px',
                    textAlign: 'center'
                });

            } else if (pageLayoutType == "blur") {
            } else {

                $('.headerContentBg').css({
                    height: '120px',
                    top: '200px'
                });

            }

        }

    }

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //REVOLUTION BANNER
    /////////////////////////////////////////////////////////////////////////////////////////////////////////

    function initRevolutionBanner() {
        var tpj = jQuery;
        tpj.noConflict();

        //tpj(document).ready(function() {
									 
	     if (mainContainer.find('div').hasClass('banner')) {

            if (tpj.fn.cssOriginal != undefined)
                tpj.fn.css = tpj.fn.cssOriginal;

            tpj('.banner').revolution({
                delay: 9000,
                startheight: 400,
                startwidth: 1000,

                hideThumbs: 0,

                thumbWidth: 100,
                // Thumb With and Height and Amount (only if navigation Tyope set to thumb !)
                thumbHeight: 50,
                thumbAmount: 5,

                navigationType: "bullet",
                //bullet, thumb, none, both		(No Thumbs In FullWidth Version !)
                navigationArrows: "none",
                //nexttobullets, verticalcentered, none
                navigationStyle: "round",
                //round,square,navbar
                touchenabled: "on",
                // Enable Swipe Function : on/off
                onHoverStop: "on",
                // Stop Banner Timet at Hover on Slide on/off
                navOffsetHorizontal: 0,
                navOffsetVertical: 4,

                shadow: 0,
                //0 = no Shadow, 1,2,3 = 3 Different Art of Shadows  (No Shadow in Fullwidth Version !)
                fullWidth: "off",
                // Turns On or Off the Fullwidth Image Centering in FullWidth Modus
                stopLoop: "off"
                // on == Stop loop at the last Slie,  off== Loop all the time.							
                });
			
			}
			

       // });
    }



    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //ACCORDION
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function initAccordion() {

        if (mainContainer.find('ul').hasClass('acc')) {

            accordion = new TINY.accordion.slider("accordion");
            accordion.init("acc", "h4", 1, -1, "acc-selected");

            var acc = $('.acc');

            acc.find('h4').click(function() {

                isotopeIntervalLength = 0;
                clearInterval(isotopeInterval);
                setIsotopeContentBg();
                isotopeInterval = setInterval(setIsotopeContentBg, 100);

            });

        }

    }

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //BUTTONS SLIDER
    /////////////////////////////////////////////////////////////////////////////////////////////////////////

    function initButtonsSlider() {

        if (mainContainer.find('section').hasClass('buttons') && mainContainer.find('section').hasClass('buttonsSlider')) {

            $('.buttons').each(function() {

                var btns = $(this);
                var slider = btns.find('.buttonsSlider');
                var closeBtn = slider.find('.buttonSliderClose');

                buttonSliderOpen = false;

                //button events

                btns.find('ul li').each(function() {

                    var btn = $(this);
                    var attr = btn.attr('data-sliderContent');

                    //If we have some slider content
                    if (typeof attr !== 'undefined' && attr !== false) {

                        btn.click(function() {

                            if (!btn.find('a').hasClass('selected')) {

                                btns.find('ul li a').each(function() {
                                    var bt = $(this);
                                    if (bt.hasClass('selected')) {
                                        bt.removeClass('selected');
                                    }
                                });

                                btn.find('a').addClass('selected');

                                //first check if slider is open and close if it is
                                if (buttonSliderOpen) {

                                    slider.slideUp(500, function() {
                                        // Animation complete.
                                        slider.find('article').each(function() {

                                            var art = $(this);
                                            art.addClass('hidden');

                                            if (art.attr('id') == attr.split('#')[1]) {
                                                art.removeClass('hidden');
                                            }

                                        });

                                    }).slideDown(500);

                                    handleFullBg();
                                    buttonSliderOpen = true;

                                }
                                else {

                                    //unhide targetted content
                                    slider.find('article').each(function() {

                                        var art = $(this);
                                        art.addClass('hidden');

                                        if (art.attr('id') == attr.split('#')[1]) {
                                            art.removeClass('hidden');
                                        }

                                    });

                                    //open slider
                                    slider.slideDown(500);

                                    btns.jacked({
                                        marginBottom: 0
                                    }, {
                                        duration: 500
                                    });

                                    handleFullBg();
                                    buttonSliderOpen = true;

                                }

                            }

                        });

                    }

                });

                //close slider
                closeBtn.click(function() {
                    slider.slideUp(500);

                    btns.jacked({
                        marginBottom: 15
                    }, {
                        duration: 500
                    });

                    handleFullBg();
                    buttonSliderOpen = false;

                    btns.find('ul li a').each(function() {
                        var bt = $(this);
                        if (bt.hasClass('selected')) {
                            bt.removeClass('selected');
                        }
                    });
                });

            });

        }

    }

    function initSliderShare() {

        if (mainContainer.find('div').hasClass('addthis_toolbox_share')) {

            // Set-up to use getMouseXY function onMouseMove
            document.body.onmousemove = getMouseXY;

            var btns = $('.addthis_toolbox_share a');
            var tooltip = $('.addthis_toolbox_share').parent().find('.tooltip');

            btns.each(function() {

                var bt = $(this);
                var pos = bt.position();
                var left = pos.left;
                var top = pos.top;

                bt.mouseover(function() {
                    var btn = $(this);
                    var txt = btn.attr('data-tooltip');

                    $('body').find('.tooltip').remove();
                    var tip = $('<div />').addClass('tooltip').appendTo('body');
                    var t = $('<p />').text(txt).appendTo(tip);
                    tip.css({
                        position: 'absolute',
                        left: mouseX - tip.width() / 2 - 3,
                        top: mouseY - 55
                    }).fadeIn();

                    });

                bt.mouseout(function() {
                    $('body').find('.tooltip').remove();
                });

            });

        }

    }

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //TABS
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function initTabs() {

        //check if tabs exists
        if (mainContainer.find('div').hasClass('tabs')) {

            var coolTabs = $(".tabs");
            var auto = coolTabs.attr('data-autoPlay') == "true" ? true: false;
            var delay = parseInt(coolTabs.attr('data-autoDelay'), 10);

            coolTabs.tabs({
                show: function(event, ui) {
                    var lastOpenedPanel = $(this).data("lastOpenedPanel");
                    if (!$(this).data("topPositionTab")) {
                        $(this).data("topPositionTab", $(ui.panel).position().top)
                        }
                    // do crossfade of tabs
                    $(ui.panel).hide().css('z-index', 2).fadeIn(300, function() {
                        $(this).css('z-index', '');
                        if (lastOpenedPanel) {
                            lastOpenedPanel.toggleClass("ui-tabs-hide").hide();
                        }
                    });

                    $(this).data("lastOpenedPanel", $(ui.panel));
                }
            });

            if (auto) {
                coolTabs.tabs('rotate', delay);
            }

            }

    }

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //LIGHTBOX
    /////////////////////////////////////////////////////////////////////////////////////////////////////////

    function initLightbox() {

        //Jackbox
        jQuery(".jackbox[data-group]").jackBox("init");

    }

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //MINI SLIDERS
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function initMiniSliders() {
		
		if (mainContainer.find('div').hasClass('miniSlider')) {

        mainContainer.find('.miniSlider').each(function(i) {

            var mc,
            ul,
            total,
            nav,
            auto,
            interval,
            autoDelay,
            curBtn,
            curIndex,
            size;

            ms = $(this);
            ul = ms.find('ul');
            total = ul.children().length;
            nav = ms.find('.miniNav');

            size = ms.parent().hasClass('onehalf') ? 470: 225;
            auto = (ms.attr('data-autoPlay') == 'true') ? true: false;
            curIndex = 0;

            //set ul width
            ul.css({
                width: total * size + 'px'
            });

            //create nav
            for (var j = 0; j < total; j++) {

                var navItem = $("<div />").addClass('miniNavBtn').appendTo(nav);

                navItem.mouseover(function() {

                    var btn = $(this);

                    if (!btn.hasClass('miniNavSelected')) {

                        btn.jacked({
                            backgroundPosition: {
                                x: 0,
                                y: -10
                            }
                        }, {
                            duration: 500
                        });
                    }

                });

                navItem.mouseout(function() {

                    var btn = $(this);

                    if (!btn.hasClass('miniNavSelected')) {

                        btn.jacked({
                            backgroundPosition: {
                                x: 0,
                                y: 0
                            }
                        }, {
                            duration: 500
                        });
                    }
                });

                navItem.click(function() {

                    var btn = $(this);

                    if (!btn.hasClass('miniNavSelected')) {

                        var index = $(nav.find('div')).index(this);
                        curIndex = index;

                        ul.jacked({
                            marginLeft: -index * size
                        }, {
                            duration: 500
                        });

                        curBtn.jacked({
                            backgroundPosition: {
                                x: 0,
                                y: 0
                            }
                        }, {
                            duration: 500
                        }).removeClass('miniNavSelected');

                        curBtn = $(this);
                        curBtn.addClass('miniNavSelected');

                    }

                });

            }

            //set first nav over
            curBtn = nav.find('.miniNavBtn:first').addClass('miniNavSelected');

            if (auto) {
                autoDelay = parseInt(ms.attr('data-autoDelay'), 10);
                interval = setInterval(handleMiniAuto, autoDelay);

                //handle carousel mouse over to stop interval
                ms.mouseenter(function() {
                    clearInterval(interval);
                });

                ms.mouseleave(function() {
                    clearInterval(interval);
                    interval = setInterval(handleMiniAuto, autoDelay);
                });

            }

            function handleMiniAuto() {
                if (curIndex < total - 1) {
                    curIndex++;
                } else {
                    curIndex = 0;
                }

                ul.jacked({
                    marginLeft: -curIndex * size
                }, {
                    duration: 500
                });

                curBtn.jacked({
                    backgroundPosition: {
                        x: 0,
                        y: 0
                    }
                }, {
                    duration: 500
                }).removeClass('miniNavSelected');

                curBtn = $(nav.find('div')).eq(curIndex);

                curBtn.jacked({
                    backgroundPosition: {
                        x: 0,
                        y: -10
                    }
                }, {
                    duration: 500
                }).addClass('miniNavSelected');

            }

        });
		
		}

    }

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //TWEETS
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function tweetMouseOver() {
		
		if (mainContainer.find('div').hasClass('tweets')) {

			$(".tweets").find('li').each(function() {
	
				var tw = $(this);
	
				tw.mouseenter(function(e) {
	
					tw.find('.tweet_avatar').jacked({
						backgroundPosition: {
							x: 0,
							y: -10
						}
					}, {
						duration: 500
					})
	
					}).mouseleave(function() {
	
					tw.find('.tweet_avatar').jacked({
						backgroundPosition: {
							x: 0,
							y: 3
						}
					}, {
						duration: 500
					})
	
					});
	
			});
	
			setFooterBgFullWidth();
		
		}

    }

    function initTweets() {
		
		if (mainContainer.find('div').hasClass('tweets')) {

			var twitter = $(".tweets").tweet({
				join_text: "auto",
				username: "WiseGuysThemes",
				avatar_size: 48,
				count: 2,
				auto_join_text_default: "",
				auto_join_text_ed: "",
				auto_join_text_ing: "",
				auto_join_text_reply: "",
				auto_join_text_url: "",
				loading_text: "loading tweets..."
			});
	
			//wait 2 seconds that the tweet loads before we can add mouse over on dynamically generated list items
			setTimeout(tweetMouseOver, 1000);
		
		}

    }

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //PORTFOLIO SINGLE
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function initPortfolioSingle() {

        if (mainContainer.find('section').hasClass('projectNav')) {

            var projectNav = $('.projectNav');

            projectNav.find('.projectPrev').click(function() {

                var dest = $(this).find('a').attr('href');
                window.open(dest, '_self');

            });

            projectNav.find('.projectNext').click(function() {

                var dest = $(this).find('a').attr('href');
                window.open(dest, '_self');

            });

        }

    }

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //BACKGROUND IMAGE FUNCTIONS
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function switchBgHolders() {
        if (bgHolderID == 'bgHolder1') {
            bgHolderID = 'bgHolder2';
            previousBgHolderID = 'bgHolder1';
        } else {
            bgHolderID = 'bgHolder1';
            previousBgHolderID = 'bgHolder2';
        }
    }

    function loadBgImage(bgImg) {

        //switchBgHolders();
        //document.getElementById("loading").className = "loading-visible";
        bg = $("<div />").css({
            position: "fixed",
            top: 0,
            left: 0,
            zIndex: -999
        }).appendTo($("body")),
        img = $("<img />").attr('id', 'bgImage').css({
            position: "absolute",
            display: "none"
        }).load(loaded).appendTo(bg);
        img.attr("src", bgImg);

    }

    function loaded(event) {

        event.stopPropagation();
        //document.getElementById("loading").className = "loading-invisible";
		

		
        if (supportsCanvas && mainContainer.find('#blurMask').length > 0) {
            stackBlurImage('bgImage', 'blurCanvas', blurRadius, false, 100);
        } else if (mainContainer.find('#blurMask').length > 0){

            $(document.createElement("img")).attr({
                src: bgImage
            }).css({
                'float': 'left',
                'position': 'absolute',
                'left': -IEBlurRadius + 'px',
                'top': -IEBlurRadius + 'px',
                'width': getResizedImgWidth() + 'px',
                'height': getResizedImgHeight() + 'px',
                'filter': 'progid:DXImageTransform.Microsoft.Blur(pixelRadius=' + IEBlurRadius + ')',
                '-ms-filter': 'progid:DXImageTransform.Microsoft.Blur(pixelRadius=' + IEBlurRadius + ')'
            }).appendTo($('#blurMask'));

        }

        handleWindowResize();

        img.unbind("load", loaded).fadeIn();

        initRevolutionBanner();

    }
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
    //CAROUSEL
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
	function initCarousel(){
		
		//first check if there is a carousel
		if(mainContainer.find('ul').hasClass('carousel')){
			
			var c = mainContainer.find('.carousel');

			//then check if blog or portfolio carousel
			if(c.hasClass('portfolio')){
				hasPortfolioCarousel = true;
				initPortfolioCarousel();
			}
			if(c.hasClass('blog')){
				hasBlogCarousel = true;
			    initBlogCarousel();
			}
											 
		}  
		
	}

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //BLOG CAROUSEL
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function initBlogCarousel() {

        blogCarousel = $('.carousel.blog');
		isSmallBlogCarousel = blogCarousel.parent().hasClass('small') ? true: false;
        blogNext = blogCarousel.parent().parent().find('.carouselNext');
        blogPrevious = blogCarousel.parent().parent().find('.carouselPrevious');
        blogCarouselWrapper = blogCarousel.parent();
        blogNav = blogCarousel.parent().parent().find('.carouselNav');

        blogItemTotal = blogCarousel.children().length;

        blogItemWidth = isSmallBlogCarousel ? 339: 470;
        blogItemHeight = isSmallBlogCarousel ? 126: 169;
        curBlogMarginDest = 0;
        blogAuto = blogCarousel.attr('data-autoPlay') == "true" ? true: false;
        blogIntervalDelay = parseInt(blogCarousel.attr('data-autoDelay'), 10);
        mouseOverBlogNav = false;

        //make sure carousel has margin=0
        resetBlogCarousel();

        //get number of featured item currently showing
        //setBlogShowing();
        //calculate animation margins
        setBlogAnimationMargins();

        //set up item counting
        blogLeftRemaining = 0;
        blogRightRemaining = blogItemTotal - numBlogShowing;

        blogNext.click(function() {
            handleBlogNext();
        });

        blogPrevious.click(function() {
            handleBlogPrevious();
        });

        //auto play
        if (blogAuto) {

            //setup interval
            clearInterval(blogInterval);
            blogInterval = setInterval(handleBlogNext, blogIntervalDelay);

            //handle carousel mouse over to stop interval
            blogCarouselWrapper.mouseenter(function() {
                clearInterval(blogInterval);
            });

            blogCarouselWrapper.mouseleave(function() {
                clearInterval(blogInterval);
                blogInterval = setInterval(handleBlogNext, blogIntervalDelay);
            });

            //handle navigation mouse over to stop interval
            blogNav.mouseenter(function() {
                mouseOverBlogNav = true;
                clearInterval(blogInterval);
            });

            blogNav.mouseleave(function() {
                mouseOverBlogNav = false;
                clearInterval(blogInterval);
                blogInterval = setInterval(handleBlogNext, blogIntervalDelay);
            });

        }

        if (isMobile) {
            blogCarouselWrapper.swipe({
                swipe: function(event, direction, distance, duration, fingerCount) {
                    //console.log("You swiped " + direction);
                    if (direction == 'left') {
                        handleBlogNext();
                    }

                    if (direction == 'right') {
                        handleBlogPrevious();
                    }
                }
            });
        }

    }


    function handleBlogNext() {

        clearInterval(blogInterval);

        if (blogRightRemaining > 0) {

            setBlogAnimationMargins();

            curBlogMarginDest = curBlogMarginDest - blogAnimNext;

            blogCarousel.jacked({
                marginLeft: curBlogMarginDest
            }, {
                duration: 750
            });

            if (contWidth == 1000 && blogRightRemaining >= 2) {
                blogRightRemaining = blogRightRemaining - numBlogShowing;
                blogLeftRemaining = blogLeftRemaining + numBlogShowing;
            } else if (contWidth == 1000 && blogRightRemaining < 2) {

                blogLeftRemaining = blogLeftRemaining + blogRightRemaining;
                blogRightRemaining = blogRightRemaining - blogRightRemaining;

            }

            if (contWidth < 1000) {
                blogRightRemaining = blogRightRemaining - numBlogShowing;
                blogLeftRemaining = blogLeftRemaining + numBlogShowing;
            }

        } else {

            curBlogMarginDest = 0;
            blogLeftRemaining = 0;
            blogRightRemaining = blogItemTotal - numBlogShowing;

            blogCarousel.jacked({
                marginLeft: curBlogMarginDest
            }, {
                duration: 750
            });

        }

        if (blogAuto && !mouseOverBlogNav) {
            blogInterval = setInterval(handleBlogNext, blogIntervalDelay + 750);
        }
    }

    function handleBlogPrevious() {

        if (blogLeftRemaining > 0) {

            setBlogAnimationMargins();

            curBlogMarginDest = curBlogMarginDest + blogAnimPrevious;

            blogCarousel.jacked({
                marginLeft: curBlogMarginDest
            }, {
                duration: 750
            });

            if (contWidth == 1000 && blogLeftRemaining >= 2) {
                blogRightRemaining = blogRightRemaining + numBlogShowing;
                blogLeftRemaining = blogLeftRemaining - numBlogShowing;
            } else if (contWidth == 1000 && blogLeftRemaining < 2) {
                blogRightRemaining = blogRightRemaining + blogLeftRemaining;
                blogLeftRemaining = blogLeftRemaining - blogLeftRemaining;
            }

            if (contWidth < 1000) {
                blogRightRemaining = blogRightRemaining + numBlogShowing;
                blogLeftRemaining = blogLeftRemaining - numBlogShowing;
            }

        }

    }

    function resizeBlogCarousel() {
		
		if(hasBlogCarousel){

			if (contWidth == 1000) {
				blogItemMargin = isSmallBlogCarousel ? 17: 20;
			}
			if (contWidth == 768) {
				blogItemMargin = isSmallBlogCarousel ? 82: 169;
			}
			if (contWidth == 420) {
				blogItemMargin = isSmallBlogCarousel ? 41: 117;
			}
			if (contWidth == 300) {
				blogItemMargin = isSmallBlogCarousel ? 75: 57;
			}
	
			blogCarouselWidth = blogItemTotal * (blogItemWidth + blogItemMargin) + 20;
	
			//set width of carousel ul
			blogCarousel.css({
				width: blogCarouselWidth + 'px'
			});
		
		}

    }

    function resetBlogCarousel() {
		
		if(hasBlogCarousel){

			resizeBlogCarousel();
			setBlogShowing();
			curBlogMarginDest = 0;
			BlogLeftRemaining = 0;
			blogRightRemaining = blogItemTotal - numBlogShowing;
	
			blogCarousel.css({
				marginLeft: 0
			});
		
		}

    }

    function setBlogShowing() {

        if (contWidth == 1000) {
            numBlogShowing = 2;
        } else {
            numBlogShowing = 1;
        }

    }

    function setBlogAnimationMargins() {

        if (contWidth == 1000) {

            if (blogRightRemaining >= 2) {
                blogAnimNext = isSmallBlogCarousel ? 712: 980;
            } else {
                blogAnimNext = isSmallBlogCarousel ? 356 * blogRightRemaining: 490 * blogRightRemaining;
            }

            if (blogLeftRemaining >= 2) {

                blogAnimPrevious = isSmallBlogCarousel ? 712: 980;
            } else {
                blogAnimPrevious = isSmallBlogCarousel ? 356 * blogRightRemaining: 490 * blogLeftRemaining;
            }

        }

        if (contWidth == 768) {

            blogAnimNext = blogAnimPrevious = isSmallBlogCarousel ? 421: 639;
        }

        if (contWidth == 420) {
            blogAnimNext = blogAnimPrevious = isSmallBlogCarousel ? 380: 344;
        }

        if (contWidth == 300) {
            blogAnimNext = blogAnimPrevious = isSmallBlogCarousel ? 236: 284;
        }

    }

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //FEATURED CAROUSEL
    /////////////////////////////////////////////////////////////////////////////////////////////////////////

    function initPortfolioCarousel() {

        portfolioCarousel = $('.carousel.portfolio');
		isSmallCarousel = portfolioCarousel.parent().hasClass('small') ? true: false;
        portfolioNext = portfolioCarousel.parent().parent().find('.carouselNext');
		portfolioPrevious = portfolioCarousel.parent().parent().find('.carouselPrevious');
		portfolioCarouselWrapper = portfolioCarousel.parent();
        portfolioNav = portfolioCarousel.parent().parent().find('.carouselNav');

        portfolioItemTotal = portfolioCarousel.children().length;
        portfolioItemWidth = isSmallCarousel ? 161: 225;
        portfolioItemHeight = isSmallCarousel ? 197: 245;
        curPortfolioMarginDest = 0;
		
        portfolioAuto = portfolioCarousel.attr('data-autoPlay') == "true" ? true: false;
        portfolioIntervalDelay = parseInt(portfolioCarousel.attr('data-autoDelay'), 10);
        mouseOverPortfolioNav = false;

        //make sure carousel has margin=0
        resetPortfolioCarousel();

        //get number of featured item currently showing
        //setPortfolioShowing();
        //calculate animation margins
        setPortfolioAnimationMargins();

        //set up item counting
        portfolioLeftRemaining = 0;
        portfolioRightRemaining = portfolioItemTotal - numPortfolioShowing;

        portfolioNext.click(function() {
            handlePortfolioNext();
        });

        portfolioPrevious.click(function() {
            handlePortfolioPrevious();
        });

        //auto play
        if (portfolioAuto) {

            //setup interval
            clearInterval(portfolioInterval);
            portfolioInterval = setInterval(handlePortfolioNext, portfolioIntervalDelay);

            //handle carousel mouse over to stop interval
            portfolioCarouselWrapper.mouseenter(function() {
                clearInterval(portfolioInterval);
            });

            portfolioCarouselWrapper.mouseleave(function() {
                clearInterval(portfolioInterval);
                portfolioInterval = setInterval(handlePortfolioNext, portfolioIntervalDelay);
            });

            //handle navigation mouse over to stop interval
            portfolioNav.mouseenter(function() {
                mouseOverPortfolioNav = true;
                clearInterval(portfolioInterval);
            });

            portfolioNav.mouseleave(function() {
                mouseOverPortfolioNav = false;
                clearInterval(portfolioInterval);
                portfolioInterval = setInterval(handlePortfolioNext, portfolioIntervalDelay);
            });

        }

        //add touch swipe event handlers only if viewed from mobile
        if (isMobile) {
            portfolioCarouselWrapper.swipe({
                swipe: function(event, direction, distance, duration, fingerCount) {
                    //console.log("You swiped " + direction);
                    if (direction == 'left') {
                        handlePortfolioNext();
                    }

                    if (direction == 'right') {
                        handlePortfolioPrevious();
                    }
                }
            });
        }

        //handle mouse events on featured items
        handlePortfolioItemMouseEvents();

    }

    function handlePortfolioItemMouseEvents() {

        //text hover
		var pItem = portfolioCarousel.find('li');

        pItem.each(function() {

            var it = $(this);
            var tx = it.find('article');

            tx.click(function() {

                var t = $(this);
                window.open(t.attr('data-targetURL'), '_self');

            });

        });

    }

    function handlePortfolioNext() {

        clearInterval(portfolioInterval);

        if (portfolioRightRemaining > 0) {

            setPortfolioAnimationMargins();

            curPortfolioMarginDest = curPortfolioMarginDest - portfolioAnimNext;

            portfolioCarousel.jacked({
                marginLeft: curPortfolioMarginDest
            }, {
                duration: 750
            });

            if (contWidth == 1000 && portfolioRightRemaining >= 4) {
                portfolioRightRemaining = portfolioRightRemaining - numPortfolioShowing;
                portfolioLeftRemaining = portfolioLeftRemaining + numPortfolioShowing;
            } else if (contWidth == 1000 && portfolioRightRemaining < 4) {

                portfolioLeftRemaining = portfolioLeftRemaining + portfolioRightRemaining;
                portfolioRightRemaining = portfolioRightRemaining - portfolioRightRemaining;

            }

            if (contWidth == 768 && portfolioRightRemaining >= 3) {
                portfolioRightRemaining = portfolioRightRemaining - numPortfolioShowing;
                portfolioLeftRemaining = portfolioLeftRemaining + numPortfolioShowing;

            } else if (contWidth == 768 && portfolioRightRemaining < 3) {

                portfolioLeftRemaining = portfolioLeftRemaining + portfolioRightRemaining;
                portfolioRightRemaining = portfolioRightRemaining - portfolioRightRemaining;
            }

            if (contWidth == 420 || contWidth == 300) {
                portfolioRightRemaining = portfolioRightRemaining - numPortfolioShowing;
                portfolioLeftRemaining = portfolioLeftRemaining + numPortfolioShowing;
            }

        } else {

            curPortfolioMarginDest = 0;
            portfolioLeftRemaining = 0;
            portfolioRightRemaining = portfolioItemTotal - numPortfolioShowing;

            portfolioCarousel.jacked({
                marginLeft: curPortfolioMarginDest
            }, {
                duration: 750
            });

        }

        if (portfolioAuto && !mouseOverPortfolioNav) {
            portfolioInterval = setInterval(handlePortfolioNext, portfolioIntervalDelay + 750);
        }
    }

    function handlePortfolioPrevious() {

        if (portfolioLeftRemaining > 0) {

            setPortfolioAnimationMargins();

            curPortfolioMarginDest = curPortfolioMarginDest + portfolioAnimPrevious;

            portfolioCarousel.jacked({
                marginLeft: curPortfolioMarginDest
            }, {
                duration: 750
            });

            if (contWidth == 1000 && portfolioLeftRemaining >= 4) {
                portfolioRightRemaining = portfolioRightRemaining + numPortfolioShowing;
                portfolioLeftRemaining = portfolioLeftRemaining - numPortfolioShowing;
            } else if (contWidth == 1000 && portfolioLeftRemaining < 4) {
                portfolioRightRemaining = portfolioRightRemaining + portfolioLeftRemaining;
                portfolioLeftRemaining = portfolioLeftRemaining - portfolioLeftRemaining;
            }

            if (contWidth == 768 && portfolioLeftRemaining >= 3) {
                portfolioRightRemaining = portfolioRightRemaining + numPortfolioShowing;
                portfolioLeftRemaining = portfolioLeftRemaining - numPortfolioShowing;
            } else if (contWidth == 768 && portfolioLeftRemaining < 3) {
                portfolioRightRemaining = portfolioRightRemaining + portfolioLeftRemaining;
                portfolioLeftRemaining = portfolioLeftRemaining - portfolioLeftRemaining;
            }

            if (contWidth == 420 || contWidth == 300) {
                portfolioRightRemaining = portfolioRightRemaining + numPortfolioShowing;
                portfolioLeftRemaining = portfolioLeftRemaining - numPortfolioShowing;
            }

        }

    }

    function resizePortfolioCarousel() {
		
		if (hasPortfolioCarousel) {

			if (contWidth == 1000) {
				portfolioItemMargin = isSmallCarousel ? 17: 20;
			}
			if (contWidth == 768) {
				portfolioItemMargin = isSmallCarousel ? 10: 26;
			}
			if (contWidth == 420) {
				portfolioItemMargin = isSmallCarousel ? 34: 117;
			}
			if (contWidth == 300) {
				portfolioItemMargin = isSmallCarousel ? 70: 57;
			}
	
			portfolioCarouselWidth = portfolioItemTotal * (portfolioItemWidth + portfolioItemMargin);
	
			//set width of carousel ul
			portfolioCarousel.css({
				width: portfolioCarouselWidth + 'px'
			});
		
		}

    }

    function resetPortfolioCarousel() {
		
		if (hasPortfolioCarousel) {

			resizePortfolioCarousel();
			setPortfolioShowing();
			curPortfolioMarginDest = 0;
			portfolioLeftRemaining = 0;
			portfolioRightRemaining = portfolioItemTotal - numPortfolioShowing;
	
			portfolioCarousel.css({
				marginLeft: 0
			});
		
		}

    }

    function setPortfolioAnimationMargins() {

        if (contWidth == 1000) {

            if (portfolioRightRemaining >= 4) {
                portfolioAnimNext = isSmallCarousel ? 712: 980;
            } else {
                portfolioAnimNext = isSmallCarousel ? 178 * portfolioRightRemaining: 245 * portfolioRightRemaining;
            }

            if (portfolioLeftRemaining >= 4) {

                portfolioAnimPrevious = isSmallCarousel ? 712: 980;
            } else {
                portfolioAnimPrevious = isSmallCarousel ? 178 * portfolioRightRemaining: 245 * portfolioLeftRemaining;
            }

        }

        if (contWidth == 768) {

            if (portfolioRightRemaining >= 3) {
                portfolioAnimNext = isSmallCarousel ? 513: 753;
            } else {
                portfolioAnimNext = isSmallCarousel ? 171 * portfolioRightRemaining: 251 * portfolioRightRemaining;
            }

            if (portfolioLeftRemaining >= 3) {

                portfolioAnimPrevious = isSmallCarousel ? 513: 753;
            } else {
                portfolioAnimPrevious = isSmallCarousel ? 171 * portfolioRightRemaining: 251 * portfolioRightRemaining;
            }
        }

        if (contWidth == 420) {

            if (isSmallCarousel) {

                if (portfolioRightRemaining >= 2) {
                    portfolioAnimNext = 390;
                } else {
                    portfolioAnimNext = 195 * portfolioRightRemaining;
                }
            } else {
                portfolioAnimNext = 342;
            }

        }
        if (contWidth == 300) {
            portfolioAnimNext = portfolioAnimPrevious = isSmallCarousel ? 231: 282;
        }

    }

    function setPortfolioShowing() {

        if (contWidth == 1000) {
            numPortfolioShowing = 4;
        }
        if (contWidth == 768) {
            numPortfolioShowing = 3;
        }
        if (contWidth == 420) {
            numPortfolioShowing = isSmallCarousel ? 2: 1;
        }
        if (contWidth == 300) {
            numPortfolioShowing = 1;
        }

    }

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //ISOTOPE PORTFOLIO
    /////////////////////////////////////////////////////////////////////////////////////////////////////////

    function initIsotopePortfolio() {

        //check if portfolio exists
        if (mainContainer.find('section').hasClass('isotopeContainer')) {

            isIsotope = true;

            var cont = $(".isotopeContainer");
            var opts = $(".isotopeFilters a");
            isotopeFilters = $(".isotopeFilters ul");
            isotopeDropdown = $(".isotopeFilters form");
            isotopePagination = $(".pagination");
            var filter = "*";
            var optionSet = $('.option-set');
            isotopeIntervalLength = 0;

            isotope3Col = cont.find('.element').hasClass('onethird');
            $(".isotopeContainer .element:even").addClass('odd');
			
			//wait for images to load then start isotope
			cont.imagesLoaded( function(){
			  cont.isotope({
				filter: filter
			  });
			});

            //transformsEnabled: false
            //set current menu
            opts.each(function() {

                var $this = $(this);

                if ($this.attr('data-filter') == filter) {

                    $this.addClass('selected');
                    $this.parent().addClass('selected');
                }
            });

            opts.click(function() {
                var $this = $(this);
                // don't proceed if already selected
                if ($this.hasClass('selected')) {
                    return false;
                }

                var val = $(this).attr('data-filter');
                optionSet.find('.selected').removeClass('selected');
                $this.addClass('selected');
                $this.parent().addClass('selected');

                //dropdown
                $('option:selected', '.isotopeFilters select').removeAttr('selected');
                $('.isotopeFilters select option[value="' + val + '"]').attr("selected", "selected");

                //update bg height with isotope
                //handleFullBg();

                cont.isotope({
                    filter: val
                });

                return false;
            });

            handleIsotopeMouseEvents(cont);

            //check opts width
            isotopeFilterWidth = isotopeFilters.width();
            isotopeFilterHeight = isotopeFilters.height();
            checkIsotopeFilterWidth();
            isotopePaginationWidth = isotopePagination.width();
            checkIsotopePaginationWidth();

            //populate responsive dropdown
            opts.each(function() {
                var el = $(this);
                $("<option />", {
                    "value": el.attr("data-filter"),
                    "text": el.text()
                    }).appendTo(".isotopeFilters select");
            });

            $(".isotopeFilters select").change(function() {

                var filterVal = $(this).find("option:selected").val();

                opts.each(function() {
                    var el = $(this);
                    var filter = el.attr('data-filter');
                    if (filter == filterVal) {

                        //check if already selected and kill if true
                        if (el.hasClass('selected')) {
                            return false;
                        } else {
                            optionSet.find('.selected').removeClass('selected');
                            el.addClass('selected');
                            el.parent().addClass('selected');
                            cont.isotope({
                                filter: filterVal
                            });
                        }
                    }
                });

            });
			
			
			

        }

    }

    function handleIsotopeMouseEvents(cont) {

        var ct = cont;

        //text
        var pItem = ct.find('.element');

        pItem.each(function() {

            var it = $(this);
            var tx = it.find('.portfolioText');

            tx.click(function() {
                var t = $(this);
                window.open(t.attr('data-targetURL'), '_self');
            });

        });

    }

    function checkIsotopeFilterWidth() {

        if (isotopeFilterWidth > contWidth || contWidth < 420) {
            isotopeFilters.addClass('hidden');
            isotopeDropdown.removeClass('hidden');
        } else {
            isotopeFilters.removeClass('hidden');
            isotopeDropdown.addClass('hidden');
        }

        if (contWidth <= 420 && !isotopeFilters.hasClass('hidden')) {
            var destRight = (contWidth - isotopeFilterWidth) / 2;
            isotopeFilters.css({
                marginRight: destRight + 'px'
            });
        } else {
            isotopeFilters.css({
                marginRight: 20 + 'px'
            });
        }

        if (!isotopeDropdown.hasClass('hidden')) {
            var destLeft = (contWidth - isotopeDropdown.width()) / 2;
            isotopeDropdown.css({
                marginLeft: destLeft + 'px'
            });
        }

    }

    function checkIsotopePaginationWidth() {

        if (contWidth <= 420) {
            var destRight = (contWidth - isotopePaginationWidth) / 2;
            isotopePagination.css({
                marginRight: destRight + 'px'
            });
        } else {
            isotopePagination.css({
                marginRight: 20 + 'px'
            });
        }

    }

    

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //WINDOW RESIZE FUNCTIONS
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function calculateBgDimensions() {

        if (img) {

            imgWidth = img.width();
            imgHeight = img.height();

            winWidth = $(window).width();
            winHeight = $(window).height();

            widthRatio = winWidth / imgWidth;
            heightRatio = winHeight / imgHeight;

            widthDiff = heightRatio * imgWidth;
            heightDiff = widthRatio * imgHeight;
        }

    }

    function handleWindowResize() {

        calculateBgDimensions();

        resizeBgImage();

    }

    function resizeBgImage() {

        if (img) {
            img.css({
                width: getResizedImgWidth() + 'px',
                height: getResizedImgHeight() + 'px'
            });

        }
        if(mainContainer.find('#blurMask').length > 0){
			if (supportsCanvas) {
				$('#blurCanvas').css({
					width: getResizedImgWidth() + 'px',
					height: getResizedImgHeight() + 'px',
					position: 'absolute',
					top: ($('.container').width() > 300) ? -90 + scrollTop + 'px': -200 + scrollTop + 'px',
					left: -(winWidth - $('.container').width()) / 2
				});
			} else {
				if(!isIE8 || isIE8 && winWidth>1040){
					$('#blurMask img').css({
						'width': getResizedImgWidth() + 'px',
						'height': getResizedImgHeight() + 'px',
						position: 'absolute',
						top: ($('.container').width() > 300) ? -90 - IEBlurRadius + scrollTop + 'px': -200 + scrollTop + 'px',
						left: -(winWidth - $('.container').width()) / 2 - IEBlurRadius
		
					});
				}
			}
		}

    }

    function getResizedImgWidth() {

        calculateBgDimensions();

        if (heightDiff > winHeight) {

            return winWidth;

        } else {

            return widthDiff;
        }
    }

    function getResizedImgHeight() {

        calculateBgDimensions();

        if (heightDiff > winHeight) {

            return heightDiff;

        } else {

            return winHeight;
        }

    }
	
	function setFullBg(){
		
		if(!isBoxedLayout){
			var contentBg = $('.contentBgFull');
			var tFooterBg = $('.footerBgFull');
			var sFooterBg = $('.subFooterBgFull');
			
			var w = $(window).width();
			var l = (w-contWidth)/2;
			
			
			
			//main content bg
			contentBg.css({
				width: w + 'px',
				left: -l + 'px'
			});
			
			//top footer bg
			tFooterBg.css({
				width: w + 'px',
				left: -l + 'px'
			});
			
			//sub footer bg
			sFooterBg.css({
				width: w + 'px',
				left: -l + 'px'
			});
		}
		else{
		 $('body').find('.headerBg').removeClass('headerBg');
		 $('body').find('.headerContentBg').css('visibility', 'hidden');
		}
		
		//console.log(tFooterBg.css('left'));
		
		
	}

    function setFooterBgFullWidth() {
/*
			calculateBgDimensions();
	
			var footerBg = $('.footerBgFull');
			var subFooterBg = $('.subFooterBgFull');
			var contentBg = $('.contentBgFull');
			var footerTopHeight = $('.footerTop').height();
			var sliderHeight = $('.headerContent').height();
			var headerHeight = $('header').height();
			var contHeight = $('.container').height();
			var contentBgFullHeight = contHeight - footerTopHeight - headerHeight - 50 - sliderHeight;
			var contentBgFullTop = headerHeight + sliderHeight;
	
			footerBg.css({
				'width': winWidth + 'px',
				'height': footerTopHeight + 8 + 'px',
				left: -(winWidth - contWidth) / 2 + 'px'
	
			});
	
			subFooterBg.css({
				'width': winWidth + 'px',
				left: -(winWidth - contWidth) / 2 + 'px',
				top: footerTopHeight + 8 + 'px'
	
			});
	
			contentBg.css({
				height: contentBgFullHeight + 'px',
				top: contentBgFullTop + 'px'
	
			});

        //content bg
*/
        }
		
		
		function setIsotopeContentBg() {
/*
			calculateBgDimensions();
	
			var footerBg = $('.footerBgFull');
			var subFooterBg = $('.subFooterBgFull');
			var contentBg = $('.contentBgFull');
			var footerTopHeight = $('.footerTop').height();
			var sliderHeight = $('.headerContent').height();
			var headerHeight = $('header').height();
			contHeight = $('.container').height();
			//var contentBgFullHeight = contHeight - footerTopHeight - headerHeight - 50 - sliderHeight;
			var contentBgFullHeight = contHeight - headerHeight - 50 - sliderHeight;
			var contentBgFullTop = headerHeight + sliderHeight;
	
			contentBg.css({
				height: contentBgFullHeight + 'px',
				top: contentBgFullTop + 'px'
	
			});
	
			isotopeIntervalLength += 100;
	
			if (isotopeIntervalLength >= 1500)
				clearInterval(isotopeInterval);
	*/
		}

    function handleFullBg() {
        isotopeIntervalLength = 0;
        clearInterval(isotopeInterval);
        isotopeInterval = setInterval(setIsotopeContentBg, 100);
    }

    /////////////////////////////////
    $(window).resize(function() {
							  
       
			
		    clearSubArrow();
			resizeBgImage();
			
	
			contWidth = mainContainer.width();
			contHeight = mainContainer.height();
			
			setFullBg();
	
			//Only reset if the container width has changed
			if (contWidth != prevContWidth && !isIE8) {
	
				prevContWidth = contWidth;
				prevContHeight = contHeight;
				
				//Portfolio carousel
				setPortfolioAnimationMargins();
				resetPortfolioCarousel();
				
				//Blog carousel
				setBlogAnimationMargins();
				resetBlogCarousel();
	
				if (isIsotope) {
					handleFullBg();
					checkIsotopeFilterWidth();
					checkIsotopePaginationWidth();
					$(".isotopeContainer").isotope('reLayout');
				}
	
				if (!isHomePage) {
					alignPageTitle();
				}
	
				checkMenuWidth();
				handleGoogleMap();
				//checkBlogPaginationWidth();
	
			}
	
			setFooterBgFullWidth();
	

    });

    $(window).scroll(function() {
        scrollTop = $(window).scrollTop();
        resizeBgImage();
    });

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //HELPERS
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function getMouseXY(e) {

        if (e && e.pageX) {
            mouseX = e.pageX;
            mouseY = e.pageY;
        } else {
            mouseX = event.clientX;
            mouseY = event.clientY;
        }
        // catch possible negative values
        if (mouseX < 0) {
            mouseX = 0;
        }
        if (mouseY < 0) {
            mouseY = 0;
        }

        var tip = $('body').find('.tooltip');

        tip.css({
            position: 'absolute'

        }).jacked({
            left: mouseX - tip.width() / 2 - 3,
            top: mouseY - 55
        }, {
            duration: 500
        });

    }

	
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
    //ODD CLASSES
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function addOddClasses() {

        $("section").each(function() {
            var s = $(this);
            s.find('.onethird:even').addClass('odd');
            s.find('.onefifth:even').addClass('odd');
        });

        if (mainContainer.find('section').hasClass('comparison')) {

            $(".comparison").each(function() {
                var s = $(this);
                var u = s.find('article ul');

                u.each(function() {
                    var ul = $(this);
                    ul.find('li:even').addClass('odd');
                });
            });

        }
    }
	
	
	
	function checkBlogPaginationWidth() {
        if (mainContainer.find('article').hasClass('blog')) {
			
			var pag = mainContainer.find('.pagination');
			var w = pag.outerWidth();
			if (contWidth <= 420) {
				var destRight = (contWidth - w) / 2;
				pag.css({
					marginRight: destRight + 'px'
				});
			} else {
				pag.css({
					marginRight: 0 + 'px'
				});
			}
        }

    }
	
	
	
	
	

})(jQuery);